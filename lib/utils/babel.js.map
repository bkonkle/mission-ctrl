{"version":3,"sources":["../../src/utils/babel.js"],"names":[],"mappings":"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","file":"babel.js","sourcesContent":["import babel from 'babel-core'\nimport createLogger from 'utils/logging'\nimport fs from 'fs'\nimport outputFileSync from 'output-file-sync'\nimport path from 'path'\nimport pathExists from 'path-exists'\nimport readdir from 'fs-readdir-recursive'\nimport slash from 'slash'\n\nconst log = createLogger('utils/babel')\n\nexport function chmod(src, dest) {\n  fs.chmodSync(dest, fs.statSync(src).mode)\n}\n\nexport function shouldIgnore(loc, ignore, only) {\n  return babel.util.shouldIgnore(loc, ignore, only)\n}\n\nexport function addSourceMappingUrl(code, loc) {\n  return code + '\\n//# sourceMappingURL=' + path.basename(loc)\n}\n\nexport function transform(filename, code, options) {\n  options.filename = filename\n  options.ignore = null\n  options.only = null\n\n  const result = babel.transform(code, options)\n  result.filename = filename\n  result.actual = code\n  return result\n}\n\nexport function compile(filename, options) {\n  const code = fs.readFileSync(filename, 'utf8')\n  return transform(filename, code, options)\n}\n\n/**\n * Compiles the given filenames to the outDir. Taken from babel-cli.\n * @param {Object} options\n * @param {Array} filenames\n */\nexport function transpileToDir(options, filenames) {\n  function write(src, rel) {\n    // remove extension and then append back on .js\n    const relative = rel.replace(/\\.(\\w*?)$/, '') + '.js'\n\n    const dest = path.join(options.outDir, relative)\n\n    const data = compile(src, {\n      sourceFileName: slash(path.relative(dest + '/..', src)),\n      sourceMapTarget: path.basename(relative),\n    })\n    if (!options.copyFiles && data.ignored) return\n\n    // we've requested explicit sourcemaps to be written to disk\n    if (data.map && options.sourceMaps && options.sourceMaps !== 'inline') {\n      const mapLoc = dest + '.map'\n      data.code = addSourceMappingUrl(data.code, mapLoc)\n      outputFileSync(mapLoc, JSON.stringify(data.map))\n    }\n\n    outputFileSync(dest, data.code)\n    chmod(src, dest)\n\n    log.debug(src + ' -> ' + dest)\n  }\n\n  function handleFile(src, filename) {\n    if (shouldIgnore(src, options.ignore, options.only)) return\n\n    if (babel.util.canCompile(filename, options.extensions)) {\n      write(src, filename)\n    } else if (options.copyFiles) {\n      const dest = path.join(options.outDir, filename)\n      outputFileSync(dest, fs.readFileSync(src))\n      chmod(src, dest)\n    }\n  }\n\n  function handle(filename) {\n    if (!pathExists.sync(filename)) return\n\n    const stat = fs.statSync(filename)\n\n    if (stat.isDirectory(filename)) {\n      const dirname = filename\n\n      readdir(dirname).forEach(file => {\n        const src = path.join(dirname, file)\n        handleFile(src, filename)\n      })\n    } else {\n      write(filename, filename)\n    }\n  }\n\n  filenames.forEach(handle)\n}\n"]}