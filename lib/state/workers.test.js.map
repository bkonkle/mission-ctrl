{"version":3,"sources":["../../src/state/workers.test.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,SAAS,eAAT,EAA0B,YAAM;;AAE9B,WAAS,WAAT,EAAsB,YAAM;;AAE1B,OAAG,sBAAH,EAA2B,YAAM;AAC/B,UAAM,SAAS,oBAAM,YAAN,CAAT,CADyB;AAE/B,UAAM,eAAe,uBAAO,EAAC,YAAY,EAAC,+BAAD,EAAZ,EAAR,CAAf,CAFyB;AAG/B,UAAM,WAAW,uBAAO,EAAC,YAAY,EAAC,6BAAD,EAAuB,OAAO,IAAP,EAAnC,EAAR,CAAX,CAHyB;;AAK/B,UAAM,SAAS,uBAAQ,YAAR,EAAsB,MAAtB,CAAT,CALyB;;AAO/B,wBAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,QAAxB,EAP+B;KAAN,CAA3B,CAF0B;GAAN,CAAtB,CAF8B;CAAN,CAA1B","file":"workers.test.js","sourcesContent":["import {expect} from 'chai'\nimport {fromJS} from 'immutable'\nimport reducer, {ready, STATUS_OFFLINE, STATUS_READY} from './workers'\n\ndescribe('state/workers', () => {\n\n  describe('reducer()', () => {\n\n    it('handles READY events', () => {\n      const action = ready('transpiler')\n      const initialState = fromJS({transpiler: {status: STATUS_OFFLINE}})\n      const expected = fromJS({transpiler: {status: STATUS_READY, error: null}})\n\n      const result = reducer(initialState, action)\n\n      expect(result).to.equal(expected)\n    })\n\n  })\n\n})\n"]}