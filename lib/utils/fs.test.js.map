{"version":3,"sources":["../../src/utils/fs.test.js"],"names":[],"mappings":";;;;;;AAGA,SAAS,UAAT,EAAqB,YAAM;;AAEzB,WAAS,iBAAT,EAA4B,YAAM;;AAEhC,OAAG,oDAAH,EAAyD,YAAM;AAC7D,UAAM,OAAO,8BAAP,CADuD;AAE7D,6BAAc,UAAd,EAA0B,IAA1B,EAF6D;;AAI7D,UAAM,OAAO,UAAM,QAAN,CAAe,UAAf,CAAP,CAJuD;AAK7D,wBAAO,KAAK,WAAL,EAAP,EAA2B,EAA3B,CAA8B,EAA9B,CAAiC,KAAjC,CAL6D;AAM7D,wBAAO,KAAK,MAAL,EAAP,EAAsB,EAAtB,CAAyB,EAAzB,CAA4B,IAA5B,CAN6D;;AAQ7D,wBAAO,UAAM,YAAN,CAAmB,UAAnB,EAA+B,QAA/B,EAAP,EAAkD,EAAlD,CAAqD,KAArD,CAA2D,IAA3D,EAR6D;KAAN,CAAzD,CAFgC;;AAahC,OAAG,4CAAH,EAAiD,YAAM;AACrD,UAAM,OAAO,8BAAP,CAD+C;AAErD,6BAAc,uBAAd,EAAuC,IAAvC,EAFqD;;AAIrD,UAAI,OAAO,UAAM,QAAN,CAAe,YAAf,CAAP,CAJiD;AAKrD,wBAAO,KAAK,WAAL,EAAP,EAA2B,EAA3B,CAA8B,EAA9B,CAAiC,IAAjC,CALqD;AAMrD,wBAAO,KAAK,MAAL,EAAP,EAAsB,EAAtB,CAAyB,EAAzB,CAA4B,KAA5B,CANqD;;AAQrD,aAAO,UAAM,QAAN,CAAe,uBAAf,CAAP,CARqD;AASrD,wBAAO,KAAK,WAAL,EAAP,EAA2B,EAA3B,CAA8B,EAA9B,CAAiC,KAAjC,CATqD;AAUrD,wBAAO,KAAK,MAAL,EAAP,EAAsB,EAAtB,CAAyB,EAAzB,CAA4B,IAA5B,CAVqD;;AAYrD,wBAAO,UAAM,YAAN,CAAmB,uBAAnB,EAA4C,QAA5C,EAAP,EAA+D,EAA/D,CAAkE,KAAlE,CAAwE,IAAxE,EAZqD;KAAN,CAAjD,CAbgC;GAAN,CAA5B,CAFyB;CAAN,CAArB","file":"fs.test.js","sourcesContent":["import {expect} from 'chai'\nimport {memfs, outputToMemFs} from './fs'\n\ndescribe('utils/fs', () => {\n\n  describe('outputToMemFs()', () => {\n\n    it('saves the requested file to the virtual filesystem', () => {\n      const code = 'export const test = \\'test\\''\n      outputToMemFs('/test.js', code)\n\n      const stat = memfs.statSync('/test.js')\n      expect(stat.isDirectory()).to.be.false\n      expect(stat.isFile()).to.be.true\n\n      expect(memfs.readFileSync('/test.js').toString()).to.equal(code)\n    })\n\n    it('creates intermediate directories as needed', () => {\n      const code = 'export const test = \\'test\\''\n      outputToMemFs('/reach/for/the/sky.js', code)\n\n      let stat = memfs.statSync('/reach/for')\n      expect(stat.isDirectory()).to.be.true\n      expect(stat.isFile()).to.be.false\n\n      stat = memfs.statSync('/reach/for/the/sky.js')\n      expect(stat.isDirectory()).to.be.false\n      expect(stat.isFile()).to.be.true\n\n      expect(memfs.readFileSync('/reach/for/the/sky.js').toString()).to.equal(code)\n    })\n\n  })\n\n})\n"]}