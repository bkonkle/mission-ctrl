{"version":3,"sources":["../../src/workers/state.test.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,SAAS,eAAT,EAA0B,YAAM;;AAE9B,WAAS,WAAT,EAAsB,YAAM;;AAE1B,aAAS,OAAT,EAAkB,YAAM;;AAEtB,SAAG,0BAAH,EAA+B,YAAM;AACnC,YAAM,SAAS,0BAAY,YAAZ,CAAT,CAD6B;AAEnC,YAAM,eAAe,uBAAO,EAAC,YAAY,EAAC,wBAAD,EAAZ,EAAR,CAAf,CAF6B;AAGnC,YAAM,WAAW,uBAAO,EAAC,YAAY,EAAC,sBAAD,EAAgB,OAAO,IAAP,EAA5B,EAAR,CAAX,CAH6B;;AAKnC,YAAM,SAAS,uBAAQ,YAAR,EAAsB,MAAtB,CAAT,CAL6B;;AAOnC,0BAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,QAAxB,EAPmC;OAAN,CAA/B,CAFsB;KAAN,CAAlB,CAF0B;GAAN,CAAtB,CAF8B;CAAN,CAA1B","file":"state.test.js","sourcesContent":["import {expect} from 'chai'\nimport {fromJS} from 'immutable'\nimport reducer, {workerReady, OFFLINE, READY} from './workers'\n\ndescribe('state/workers', () => {\n\n  describe('reducer()', () => {\n\n    describe('READY', () => {\n\n      it('sets the status to READY', () => {\n        const action = workerReady('transpiler')\n        const initialState = fromJS({transpiler: {status: OFFLINE}})\n        const expected = fromJS({transpiler: {status: READY, error: null}})\n\n        const result = reducer(initialState, action)\n\n        expect(result).to.equal(expected)\n      })\n\n    })\n\n  })\n\n})\n"]}