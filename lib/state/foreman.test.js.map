{"version":3,"sources":["../../src/state/foreman.test.js"],"names":[],"mappings":";;;;;;;;IAEY;;;;AAEZ,IAAM,UAAU,QAAQ,OAAR;;AAEhB,SAAS,eAAT,EAA0B,YAAM;;AAE9B,WAAS,SAAT,EAAoB,YAAM;;AAExB,OAAG,0BAAH,EAA+B,YAAM;AACnC,UAAM,SAAS,QAAQ,OAAR,CAAgB,QAAQ,cAAR,CAAzB,CAD6B;AAEnC,UAAM,eAAe,uBAAO,EAAC,MAAM,IAAN,EAAR,CAAf,CAF6B;AAGnC,UAAM,WAAW,uBAAO,EAAC,MAAM,QAAQ,cAAR,EAAd,CAAX,CAH6B;;AAKnC,UAAM,SAAS,QAAQ,YAAR,EAAsB,MAAtB,CAAT,CAL6B;;AAOnC,wBAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,QAAxB,EAPmC;KAAN,CAA/B,CAFwB;GAAN,CAApB,CAF8B;CAAN,CAA1B","file":"foreman.test.js","sourcesContent":["import {expect} from 'chai'\nimport {fromJS} from 'immutable'\nimport * as foreman from './foreman'\n\nconst reducer = foreman.default\n\ndescribe('state/foreman', () => {\n\n  describe('reducer', () => {\n\n    it('handles SET_GOAL actions', () => {\n      const action = foreman.setGoal(foreman.GOAL_TRANSPILE)\n      const initialState = fromJS({goal: null})\n      const expected = fromJS({goal: foreman.GOAL_TRANSPILE})\n\n      const result = reducer(initialState, action)\n\n      expect(result).to.equal(expected)\n    })\n\n  })\n\n})\n"]}