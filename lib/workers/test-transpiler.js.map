{"version":3,"sources":["../../src/workers/test-transpiler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAOA,SAAS,oBAAT,EAA+B,YAAM;;AAEnC,MAAM,eAAe,gBAAM,GAAN,EAAf,CAF6B;;AAInC,MAAM,aAAa,0BAAW,oBAAX,EAAiC;AAClD,mBAAe,EAAC,gBAAgB,YAAhB,EAAhB;GADiB,CAAb,CAJ6B;;AAQnC,YAAU,YAAM;AACd,iBAAa,KAAb,GADc;GAAN,CAAV,CARmC;;AAYnC,WAAS,aAAT,EAAwB,YAAM;;AAE5B,OAAG,0DAAH,EAA+D,gBAAQ;AACrE,UAAM,kBAAkB,CAAC,wBAAD,EAAU,yBAAV,CAAlB,CAD+D;AAErE,UAAM,QAAQ,qBAAU,EAAV,EAAc,eAAd,EAA+B,IAA/B,CAAR,CAF+D;AAGrE,UAAM,SAAS,EAAC,aAAa,gBAAM,GAAN,EAAb,EAAV,CAH+D;;AAKrE,iBAAW,SAAX,CAAqB,KAArB,EAA4B,MAA5B,EALqE;;AAOrE,wBAAO,OAAO,WAAP,CAAP,CAA2B,EAA3B,CAA8B,IAA9B,CAAmC,IAAnC,CAAwC,UAAxC,CAAmD,8CAAnD,EAPqE;AAQrE,wBAAO,OAAO,WAAP,CAAP,CAA2B,EAA3B,CAA8B,IAA9B,CAAmC,IAAnC,CAAwC,UAAxC,CAAmD,+CAAnD,EARqE;KAAR,CAA/D,CAF4B;GAAN,CAAxB,CAZmC;CAAN,CAA/B","file":"test-transpiler.js","sourcesContent":["import {expect} from 'chai'\nimport {mockStore} from 'utils/test'\nimport {busy, ready, WORKER_TRANSPILER} from 'state/workers'\nimport {start, finish} from 'state/transpiler'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\n\ndescribe('workers/transpiler', () => {\n\n  const transpileSpy = sinon.spy()\n\n  const transpiler = proxyquire('workers/transpiler', {\n    'utils/babel': {transpileToDir: transpileSpy},\n  })\n\n  afterEach(() => {\n    transpileSpy.reset()\n  })\n\n  describe('transpile()', () => {\n\n    it('reports status to the worker and updates internal status', done => {\n      const expectedActions = [start(), finish()]\n      const store = mockStore({}, expectedActions, done)\n      const worker = {postMessage: sinon.spy()}\n\n      transpiler.transpile(store, worker)\n\n      expect(worker.postMessage).to.have.been.calledWith(busy(WORKER_TRANSPILER))\n      expect(worker.postMessage).to.have.been.calledWith(ready(WORKER_TRANSPILER))\n    })\n\n  })\n\n})\n"]}