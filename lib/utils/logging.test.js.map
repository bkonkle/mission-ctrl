{"version":3,"sources":["../../src/utils/logging.test.js"],"names":[],"mappings":"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","file":"logging.test.js","sourcesContent":["import {expect} from 'chai'\nimport bunyan from 'bunyan'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\n\ndescribe('utils/logging', () => {\n\n  const createLoggerSpy = sinon.spy()\n  const getConfigStub = sinon.stub()\n\n  const logging = proxyquire('./logging', {\n    './config': getConfigStub,\n    'bunyan': {createLogger: createLoggerSpy},\n  })\n  const createLogger = logging.default\n  const PlainStream = logging.PlainStream\n\n  beforeEach(() => {\n    createLoggerSpy.reset()\n    getConfigStub.reset()\n  })\n\n  describe('createLogger()', () => {\n\n    it('sets the loglevel to \"info\"', () => {\n      getConfigStub.returns({verbose: false})\n\n      createLogger('test-logging')\n\n      expect(createLoggerSpy).to.have.been.calledOnce\n      const result = createLoggerSpy.firstCall.args[0]\n\n      expect(result).to.have.property('streams').and.have.length(1)\n      expect(result.streams[0]).to.have.property('level', bunyan.INFO)\n    })\n\n    it('sets the loglevel to \"debug\" if config.verbose', () => {\n      getConfigStub.returns({verbose: true})\n\n      createLogger('test-logging')\n\n      expect(createLoggerSpy).to.have.been.calledOnce\n      const result = createLoggerSpy.firstCall.args[0]\n\n      expect(result).to.have.property('streams').and.have.length(1)\n      expect(result.streams[0]).to.have.property('level', bunyan.DEBUG)\n    })\n\n    it('sets the loglevel to \"warning\" if config.quiet', () => {\n      getConfigStub.returns({quiet: true})\n\n      createLogger('test-logging')\n\n      expect(createLoggerSpy).to.have.been.calledOnce\n      const result = createLoggerSpy.firstCall.args[0]\n\n      expect(result).to.have.property('streams').and.have.length(1)\n      expect(result.streams[0]).to.have.property('level', bunyan.WARN)\n    })\n\n    it('sets the loglevel to \"error\" if config.silent', () => {\n      getConfigStub.returns({silent: true})\n\n      createLogger('test-logging')\n\n      expect(createLoggerSpy).to.have.been.calledOnce\n      const result = createLoggerSpy.firstCall.args[0]\n\n      expect(result).to.have.property('streams').and.have.length(1)\n      expect(result.streams[0]).to.have.property('level', bunyan.ERROR)\n    })\n\n    it('uses the PlainStream by default', () => {\n      getConfigStub.returns({verbose: false})\n\n      createLogger('test-logging')\n\n      expect(createLoggerSpy).to.have.been.calledOnce\n      const result = createLoggerSpy.firstCall.args[0]\n\n      expect(result).to.have.property('streams')\n        .and.have.length(1)\n      expect(result.streams[0]).to.have.property('stream')\n        .and.be.an.instanceof(PlainStream)\n    })\n\n  })\n\n})\n"]}