{"version":3,"sources":["../src/foreman.test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAOA,SAAS,SAAT,EAAoB,YAAM;;AAExB,MAAM,WAAW,gBAAM,IAAN,EAAX,CAFkB;;oBAIT,0BAAW,WAAX,EAAwB;AACrC,qBAAiB,EAAC,MAAM,QAAN,EAAlB;GADa,EAJS;;MAIjB,wBAJiB;;AAQxB,YAAU,YAAM;AACd,aAAS,KAAT,GADc;GAAN,CAAV,CARwB;;AAYxB,WAAS,QAAT,EAAmB,YAAM;;AAEvB,QAAI,oBAAJ,CAFuB;;AAIvB,WAAO,YAAM;AACX,eAAS,OAAT,CAAiB;AACf,YAAI,YAAC,KAAD,EAAQ,EAAR,EAAe;AACjB,qBAAW,EAAX,CADiB;SAAf;OADN,EADW;KAAN,CAAP,CAJuB;;AAYvB,OAAG,4BAAH,EAAiC,YAAM;AACrC,aADqC;AAErC,wBAAO,QAAP,EAAiB,EAAjB,CAAoB,IAApB,CAAyB,IAAzB,CAA8B,UAA9B,CAAyC,QAAQ,OAAR,CAAgB,oBAAhB,CAAzC,EAFqC;KAAN,CAAjC,CAZuB;;AAiBvB,OAAG,yCAAH,EAA8C,gBAAQ;AACpD,UAAM,QAAQ,qBAAU,EAAV,EAAc,CAC1B,8CAD0B,EAE1B,oBAAM,YAAN,CAF0B,CAAd,EAGX,IAHW,CAAR,CAD8C;;AAMpD,YAAM,SAAN,GAAkB,YAAM,EAAN,CANkC;;AAQpD,WAAK,KAAL,EARoD;;AAUpD,eAAS,oBAAM,YAAN,CAAT,EAVoD;KAAR,CAA9C,CAjBuB;GAAN,CAAnB,CAZwB;CAAN,CAApB","file":"foreman.test.js","sourcesContent":["import {expect} from 'chai'\nimport {mockStore} from 'utils/test'\nimport {ready} from 'state/workers'\nimport {setGoal, GOAL_TRANSPILE} from 'state/foreman'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\n\ndescribe('foreman', () => {\n\n  const forkStub = sinon.stub()\n\n  const {init} = proxyquire('./foreman', {\n    'child_process': {fork: forkStub},\n  })\n\n  afterEach(() => {\n    forkStub.reset()\n  })\n\n  describe('init()', () => {\n\n    let callback\n\n    before(() => {\n      forkStub.returns({\n        on: (event, cb) => {\n          callback = cb\n        },\n      })\n    })\n\n    it('spawns a transpiler worker', () => {\n      init()\n      expect(forkStub).to.have.been.calledWith(require.resolve('workers/transpiler'))\n    })\n\n    it('dispatches actions from worker messages', done => {\n      const store = mockStore({}, [\n        setGoal(GOAL_TRANSPILE),\n        ready('transpiler'),\n      ], done)\n\n      store.subscribe = () => {}\n\n      init(store)\n\n      callback(ready('transpiler'))\n    })\n\n  })\n\n})\n"]}