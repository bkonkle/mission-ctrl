{"version":3,"sources":["../../src/utils/config.test.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAIA,SAAS,cAAT,EAAyB,YAAM;;AAE7B,MAAM,aAAa,gBAAM,IAAN,EAAb,CAFuB;;AAI7B,MAAM,YAAY,0BAAW,UAAX,EAAuB;AACvC,mBAAe,UAAf;GADgB,CAAZ,CAJuB;;AAQ7B,aAAW,YAAM;AACf,eAAW,KAAX,GADe;GAAN,CAAX,CAR6B;;AAY7B,WAAS,aAAT,EAAwB,YAAM;;AAE5B,QAAM,WAAW;AACf,SAAG,EAAH;AACA,YAAM,OAAN;AACA,YAAM,aAAN;AACA,kBAAY,KAAZ;AACA,aAAO,KAAP;AACA,cAAQ,KAAR;AACA,cAAQ,KAAR;AACA,SAAG,IAAH;AACA,eAAS,IAAT;KATI,CAFsB;;AAc5B,OAAG,qCAAH,EAA0C,YAAM;AAC9C,UAAM,OAAO,CAAC,WAAD,CAAP,CADwC;AAE9C,UAAM,SAAS,UAAU,IAAV,CAAT,CAFwC;AAG9C,wBAAO,MAAP,EAAe,EAAf,CAAkB,IAAlB,CAAuB,KAAvB,CAA6B,QAA7B,EAH8C;KAAN,CAA1C,CAd4B;;AAoB5B,OAAG,+BAAH,EAAoC,YAAM;AACxC,iBAAW,OAAX,CAAmB,EAAC,SAAS,IAAT,EAApB,EADwC;AAExC,UAAM,SAAS,UAAU,EAAV,CAAT,CAFkC;AAGxC,wBAAO,UAAP,EAAmB,EAAnB,CAAsB,IAAtB,CAA2B,IAA3B,CAAgC,UAAhC,CAA2C,aAA3C,EAHwC;AAIxC,wBAAO,MAAP,EAAe,EAAf,CAAkB,IAAlB,CAAuB,KAAvB,CAA6B,QAA7B,EAJwC;KAAN,CAApC,CApB4B;GAAN,CAAxB,CAZ6B;CAAN,CAAzB","file":"config.test.js","sourcesContent":["import {expect} from 'chai'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\n\ndescribe('utils/config', () => {\n\n  const findupStub = sinon.stub()\n\n  const getConfig = proxyquire('./config', {\n    'findup-sync': findupStub,\n  })\n\n  beforeEach(() => {\n    findupStub.reset()\n  })\n\n  describe('getConfig()', () => {\n\n    const expected = {\n      _: [],\n      dest: 'build',\n      glob: '**/*.js?(x)',\n      production: false,\n      quiet: false,\n      silent: false,\n      source: 'src',\n      v: true,\n      verbose: true,\n    }\n\n    it('checks the command line for options', () => {\n      const args = ['--verbose']\n      const result = getConfig(args)\n      expect(result).to.deep.equal(expected)\n    })\n\n    it('checks an rc file for options', () => {\n      findupStub.returns({verbose: true})\n      const result = getConfig([])\n      expect(findupStub).to.have.been.calledWith('.shipyardrc')\n      expect(result).to.deep.equal(expected)\n    })\n\n  })\n\n})\n"]}