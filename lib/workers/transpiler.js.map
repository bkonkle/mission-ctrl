{"version":3,"sources":["../../src/workers/transpiler.js"],"names":[],"mappings":";;;QA2BgB;QAKA;;;;;;;;;;;;;;;;;;;;;;AAxBhB,IAAM,MAAM,uBAAa,oBAAb,CAAN;;AAEN,SAAS,IAAT,GAAgB;AACd,MAAI,KAAJ,CAAU,yBAAV,EADc;;AAGd,MAAM,QAAQ,sBAAR,CAHQ;;AAKd,QAAM,SAAN,CAAgB;WAAM,kBAAkB,IAAlB,CAAuB,IAAvB,EAA6B,KAA7B;GAAN,CAAhB,CALc;;AAOd,UAAQ,EAAR,CAAW,SAAX,EAAsB,mBAAW;AAC/B,QAAI,KAAJ,CAAU,mBAAV,EAA+B,OAA/B,EAD+B;AAE/B,UAAM,QAAN,CAAe,OAAf,EAF+B;GAAX,CAAtB,CAPc;;AAYd,UAAQ,IAAR,CAAa,+CAAb,EAZc;;AAcd,MAAI,KAAJ,CAAU,qCAAV,EAdc;CAAhB;;AAiBO,SAAS,iBAAT,CAA2B,KAA3B,EAAkC;AACvC,MAAM,QAAQ,MAAM,QAAN,EAAR,CADiC;AAEvC,MAAI,KAAJ,CAAU,eAAV,EAA2B,KAA3B,EAFuC;CAAlC;;AAKA,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AAC/B,MAAM,SAAS,uBAAT,CADyB;AAE/B,MAAM,YAAY,gBAAK,OAAO,MAAP,CAAjB,CAFyB;;AAI/B,UAAQ,IAAR,CAAa,8CAAb,EAJ+B;AAK/B,QAAM,QAAN,CAAe,wBAAf,EAL+B;;AAO/B,6BAAe;AACb,YAAQ,OAAO,MAAP;AACR,gBAAY,IAAZ;GAFF,EAGG,SAHH,EAP+B;;AAY/B,QAAM,QAAN,CAAe,yBAAf,EAZ+B;AAa/B,UAAQ,IAAR,CAAa,+CAAb,EAb+B;CAA1B;;AAgBP","file":"transpiler.js","sourcesContent":["import {finish, start} from 'state/transpiler'\nimport {getStore} from 'state/store'\nimport {ready, busy, WORKER_TRANSPILER} from 'state/workers'\nimport {sync as glob} from 'glob'\nimport {transpileToDir} from 'utils/babel'\nimport createLogger from 'utils/logging'\nimport getConfig from 'utils/config'\n\nconst log = createLogger('workers/transpiler')\n\nfunction init() {\n  log.debug('Transpiler initializing')\n\n  const store = getStore()\n\n  store.subscribe(() => handleStateChange.bind(null, store))\n\n  process.on('message', message => {\n    log.debug('Message received!', message)\n    store.dispatch(message)\n  })\n\n  process.send(ready(WORKER_TRANSPILER))\n\n  log.debug('Transpiler successfully initialized')\n}\n\nexport function handleStateChange(store) {\n  const state = store.getState()\n  log.debug('State changed', state)\n}\n\nexport function transpile(store) {\n  const config = getConfig()\n  const filenames = glob(config.source)\n\n  process.send(busy(WORKER_TRANSPILER))\n  store.dispatch(start())\n\n  transpileToDir({\n    outDir: config.outDir,\n    sourceMaps: true,\n  }, filenames)\n\n  store.dispatch(finish())\n  process.send(ready(WORKER_TRANSPILER))\n}\n\ninit()\n"]}