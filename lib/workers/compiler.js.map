{"version":3,"sources":["../../src/workers/compiler.js"],"names":[],"mappings":";;;QAQgB;kBAYQ;;;;;;;;;;;;;;;;;;AAdxB,IAAM,MAAM,uBAAa,UAAb,CAAN;;AAEC,SAAS,OAAT,GAAmB;AACxB,MAAM,SAAS,wBAAT,CADkB;AAExB,MAAM,QAAQ,gBAAK,OAAO,MAAP,CAAb,CAFkB;;AAIxB,MAAI,KAAJ,EAAW;AACT,UAAM,OAAN,CAAc,oBAAY;AACxB,UAAM,UAAU,gBAAM,iBAAN,CAAwB,QAAxB,CAAV,CADkB;AAExB,UAAI,KAAJ,CAAU,kBAAV,EAA8B,OAA9B,EAFwB;KAAZ,CAAd,CADS;GAAX;CAJK;;AAYQ,SAAS,QAAT,GAAoB;AACjC,OAAK,WAAL,CAAiB,oBAAM,UAAN,CAAjB;;;;AADiC,KAKjC,CAAI,KAAJ,CAAU,yBAAV,EALiC;CAApB","file":"compiler.js","sourcesContent":["import {getConfig} from 'utils/config'\nimport {ready} from 'state/workers'\nimport babel from 'babel'\nimport createLogger from 'utils/logging'\nimport {sync as glob} from 'glob'\n\nconst log = createLogger('compiler')\n\nexport function compile() {\n  const config = getConfig()\n  const files = glob(config.source)\n\n  if (files) {\n    files.forEach(filename => {\n      const content = babel.transformFileSync(filename)\n      log.debug('Compiled output:', content)\n    })\n  }\n}\n\nexport default function compiler() {\n  this.postMessage(ready('compiler'))\n\n  // TODO: Send messages received from the foreman through a redux reducer\n\n  log.debug('Compiler process ready.')\n}\n"]}