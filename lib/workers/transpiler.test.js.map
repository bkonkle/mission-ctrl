{"version":3,"sources":["../../src/workers/transpiler.test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAOA,SAAS,oBAAT,EAA+B,YAAM;;AAEnC,MAAM,eAAe,gBAAM,GAAN,EAAf,CAF6B;;AAInC,MAAM,aAAa,0BAAW,cAAX,EAA2B;AAC5C,mBAAe,EAAC,gBAAgB,YAAhB,EAAhB;GADiB,CAAb,CAJ6B;;AAQnC,YAAU,YAAM;AACd,iBAAa,KAAb,GADc;AAEd,YAAQ,EAAR,CAAW,KAAX,GAFc;AAGd,YAAQ,IAAR,CAAa,KAAb,GAHc;GAAN,CAAV,CARmC;;AAcnC,WAAS,aAAT,EAAwB,YAAM;;AAE5B,OAAG,0DAAH,EAA+D,gBAAQ;AACrE,UAAM,kBAAkB,CAAC,wBAAD,EAAU,yBAAV,CAAlB,CAD+D;AAErE,UAAM,QAAQ,qBAAU,EAAV,EAAc,eAAd,EAA+B,IAA/B,CAAR,CAF+D;;AAIrE,iBAAW,SAAX,CAAqB,KAArB,EAJqE;;AAMrE,wBAAO,QAAQ,IAAR,CAAP,CAAqB,EAArB,CAAwB,IAAxB,CAA6B,IAA7B,CAAkC,UAAlC,CAA6C,8CAA7C,EANqE;AAOrE,wBAAO,QAAQ,IAAR,CAAP,CAAqB,EAArB,CAAwB,IAAxB,CAA6B,IAA7B,CAAkC,UAAlC,CAA6C,+CAA7C,EAPqE;KAAR,CAA/D,CAF4B;GAAN,CAAxB,CAdmC;CAAN,CAA/B","file":"transpiler.test.js","sourcesContent":["import {expect} from 'chai'\nimport {mockStore} from 'utils/test'\nimport {busy, ready, WORKER_TRANSPILER} from 'state/workers'\nimport {start, finish} from 'state/transpiler'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\n\ndescribe('workers/transpiler', () => {\n\n  const transpileSpy = sinon.spy()\n\n  const transpiler = proxyquire('./transpiler', {\n    'utils/babel': {transpileToDir: transpileSpy},\n  })\n\n  afterEach(() => {\n    transpileSpy.reset()\n    process.on.reset()\n    process.send.reset()\n  })\n\n  describe('transpile()', () => {\n\n    it('reports status to the worker and updates internal status', done => {\n      const expectedActions = [start(), finish()]\n      const store = mockStore({}, expectedActions, done)\n\n      transpiler.transpile(store)\n\n      expect(process.send).to.have.been.calledWith(busy(WORKER_TRANSPILER))\n      expect(process.send).to.have.been.calledWith(ready(WORKER_TRANSPILER))\n    })\n\n  })\n\n})\n"]}